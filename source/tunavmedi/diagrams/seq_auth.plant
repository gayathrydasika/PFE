@startuml
hide footbox
participant "LoginActivity:Activity" as login
actor "Doctor" as doc
participant "UserLoginTask:AsyncTask<Void, Void, Boolean>" as logintask
participant "AuthHelper:AuthenticationHandler" as helper
participant "sharedPrefs:SharedPreferentce" as shared

activate login
login -> helper : new
activate helper
activate shared

login --> helper : logout()
login -> shared : onLogout()
activate shared
shared -> shared : commit()
deactivate shared

loop

doc -> login : id, password

alt input wrong
login -> doc : display input error message

else input correct
login -> logintask : new
activate logintask
login -> logintask : execute()

logintask -> logintask : onPreExecete()
activate logintask
deactivate logintask

logintask -> logintask : doInBackgroud()
activate logintask
logintask --> helper : login(id, password)
helper <- logintask : getStatus()
helper -> logintask : success
deactivate logintask

logintask -> logintask : onPostEexecute(success)
activate logintask
alt success == true

break

login -> shared : onLogin()

activate shared
shared -> shared : commit()
deactivate shared

logintask -> login : setReselt(Context.RESULT_OK)
logintask -> login : finish()
end

else success == false

logintask -> helper : getError()
logintask <- helper : loginError
logintask -> login : setError(loginError)
login -> doc : display login error message

end
deactivate logintask

end
deactivate logintask

end
deactivate helper
deactivate shared
deactivate login
@enduml